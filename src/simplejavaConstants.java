/* Generated By:JavaCC: Do not edit this line. simplejavaConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface simplejavaConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int FOR = 9;
  /** RegularExpression Id. */
  int IF = 10;
  /** RegularExpression Id. */
  int WHILE = 11;
  /** RegularExpression Id. */
  int DO = 12;
  /** RegularExpression Id. */
  int ELSE = 13;
  /** RegularExpression Id. */
  int CLASS = 14;
  /** RegularExpression Id. */
  int TRUE = 15;
  /** RegularExpression Id. */
  int FALSE = 16;
  /** RegularExpression Id. */
  int RETURN = 17;
  /** RegularExpression Id. */
  int NEW = 18;
  /** RegularExpression Id. */
  int PLUS = 19;
  /** RegularExpression Id. */
  int MINUS = 20;
  /** RegularExpression Id. */
  int MULTIPLY = 21;
  /** RegularExpression Id. */
  int DIVIDE = 22;
  /** RegularExpression Id. */
  int EQUAL = 23;
  /** RegularExpression Id. */
  int GREATERTHAN = 24;
  /** RegularExpression Id. */
  int NOT = 25;
  /** RegularExpression Id. */
  int LEFTBRACE = 26;
  /** RegularExpression Id. */
  int LEFTBRACKET = 27;
  /** RegularExpression Id. */
  int RIGHTBRACKET = 28;
  /** RegularExpression Id. */
  int DOT = 29;
  /** RegularExpression Id. */
  int COMMA = 30;
  /** RegularExpression Id. */
  int GREATEROREQUAL = 31;
  /** RegularExpression Id. */
  int SEMICOLON = 32;
  /** RegularExpression Id. */
  int AND = 33;
  /** RegularExpression Id. */
  int RIGHTBRACE = 34;
  /** RegularExpression Id. */
  int LEFTPARAN = 35;
  /** RegularExpression Id. */
  int RIGHTPARAN = 36;
  /** RegularExpression Id. */
  int NOTEQUAL = 37;
  /** RegularExpression Id. */
  int LESSOREQUAL = 38;
  /** RegularExpression Id. */
  int LESSTHAN = 39;
  /** RegularExpression Id. */
  int GETS = 40;
  /** RegularExpression Id. */
  int OR = 41;
  /** RegularExpression Id. */
  int SINGLEQUOTE = 42;
  /** RegularExpression Id. */
  int DOUBLEQUOTE = 43;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 44;
  /** RegularExpression Id. */
  int IDENTIFIER = 45;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int INSIDE_COMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<token of kind 1>",
    "\"/*\"",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 5>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"for\"",
    "\"if\"",
    "\"while\"",
    "\"do\"",
    "\"else\"",
    "\"class\"",
    "\"true\"",
    "\"false\"",
    "\"return\"",
    "\"new\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"==\"",
    "\">\"",
    "\"!\"",
    "\"{\"",
    "\"[\"",
    "\"]\"",
    "\".\"",
    "\",\"",
    "\">=\"",
    "\";\"",
    "\"&&\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\"!=\"",
    "\"<=\"",
    "\"<\"",
    "\"=\"",
    "\"||\"",
    "\"\\\'\"",
    "\"\\\"\"",
    "<INTEGER_LITERAL>",
    "<IDENTIFIER>",
  };

}
